FROM python:3.9-slim-buster

# Define o diretório de trabalho
WORKDIR /app

# Copia o arquivo requirements.txt para o diretório de trabalho
COPY requirements.txt .

# Instala as dependências
RUN pip install --no-cache-dir -r requirements.txt

# Copia o código fonte para o diretório de trabalho
COPY . .

# Define a porta de exposição da aplicação
EXPOSE 5000

# Define o comando de inicialização da aplicação
CMD ["python", "app.py"]



Crie um arquivo requirements.txt que contenha as dependências da sua aplicação. Por exemplo:
makefile

Flask==2.0.2
Coloque o código fonte da sua aplicação no mesmo diretório do Dockerfile.

No diretório onde você salvou os arquivos Dockerfile, requirements.txt e o código fonte, execute o seguinte comando para criar a imagem:


docker build -t nome_da_imagem .
Depois de criar a imagem, você pode executar um contêiner com o seguinte comando:
css

docker run --name nome_do_container -p 5000:5000 -d nome_da_imagem